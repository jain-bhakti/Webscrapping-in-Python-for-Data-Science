#install the required packages using pip command(only if not already exist)
!pip install yfinance
!pip install pandas
!pip install requests
!pip install bs4
!pip install plotly

#import the modules

import yfinance as yf
import pandas as pd
import requests
from bs4 import BeautifulSoup
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import matplotlib.pyplot as plt 

#Define the function make_graph to plot graph

def make_graph(stock_data, revenue_data, stock):
    fig = make_subplots(rows=2, cols=1, shared_xaxes=True, subplot_titles=("Historical Share Price", "Historical Revenue"), vertical_spacing = .3)
    fig.add_trace(go.Scatter(x=pd.to_datetime(stock_data.Date, infer_datetime_format=True), y=stock_data.Close.astype("float"), name="Share Price"), row=1, col=1)
    fig.add_trace(go.Scatter(x=pd.to_datetime(revenue_data.Date, infer_datetime_format=True), y=revenue_data.Revenue.astype("float"), name="Revenue"), row=2, col=1)
    fig.update_xaxes(title_text="Date", row=1, col=1)
    fig.update_xaxes(title_text="Date", row=2, col=1)
    fig.update_yaxes(title_text="Price ($US)", row=1, col=1)
    fig.update_yaxes(title_text="Revenue ($US Millions)", row=2, col=1)
    fig.update_layout(showlegend=False,
    height=900,
    title=stock,
    xaxis_rangeslider_visible=True)
    fig.show()
    
#Use yfinance to Extract Stock Data

tesla = yf.Ticker("TSLA")
tesla_data = tesla.history(period = "max")
tesla_data.reset_index(inplace = True)
tesla_data.head()

#Use Webscraping to Extract Tesla Revenue Data
html_data = requests.get("https://www.macrotrends.net/stocks/charts/TSLA/tesla/revenue").text
soup = BeautifulSoup(html_data,"html5lib")                             #creating a beautifulsoup object
tesla_revenue = pd.DataFrame(columns = ["Date","Revenue"])
for row in soup.find("tbody").find_all("tr"):
    col = row.find_all("td")
    date = col[0].text
    revenue = col[1].text.replace("$", "").replace(",", "")
    tesla_revenue = tesla_revenue.append({"Date":date , "Revenue":revenue}, ignore_index=True)
tesla_revenue.dropna(inplace=True)                              #to drop the NaN and empty strings
tesla_revenue = tesla_revenue[tesla_revenue['Revenue'] != ""] 
tesla_revenue.tail()

#Use yfinance to Extract Stock Data
GameStop = yf.Ticker("GME")
gme_data = GameStop.history(period = "max")
gme_data.reset_index(inplace = True)
gme_data.head()

#Use Webscraping to Extract GME Revenue Data
html_data = requests.get("https://www.macrotrends.net/stocks/charts/GME/gamestop/revenue").text

soup = BeautifulSoup(html_data,"html5lib")     #creating a beautifulsoup object
gme_revenue = pd.DataFrame(columns = ["Date","Revenue"])                      #traversing through the html doc to extract revenue data
for row in soup.find("tbody").find_all("tr"):
    col = row.find_all("td")
    date = col[0].text
    revenue = col[1].text.replace("$", "").replace(",", "")
    gme_revenue = gme_revenue.append({"Date":date , "Revenue":revenue}, ignore_index=True)

gme_revenue.tail()

#Plot Tesla Stock Graph using make_graph method definined earlier
make_graph(tesla_data, tesla_revenue, 'Tesla')

#Plot GameStop Stock Graph
make_graph(gme_data, gme_revenue, 'GameStop')

***END***


